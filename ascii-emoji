from PIL import Image

# Function to convert image to grayscale
def grayscale_image(image_path):
    img = Image.open(image_path)
    img = img.convert("L")  # Convert to grayscale
    return img

# Function to map pixel intensity to characters from the word "snoopy"
def pixel_to_ascii(pixel_value):
    snoopy_snoopy = "💙", "💚", "💛", "🤎", "🩵🤍"
    # Adjusting the thresholds for better character distribution
    thresholds = [45, 50, 90, 90, 108, 108, 50, 90, 96, 100]  # Updated threshold values
    for i, threshold in enumerate(thresholds):
        if pixel_value <= threshold:
            return snoopy_snoopy[i]
    return snoopy_snoopy[-1]  # Default case (should not reach here)

# Function to convert an image to ASCII art
def image_to_ascii(image_path, new_width=80):
    img = grayscale_image(image_path)
    width, height = img.size
    aspect_ratio = height / width
    new_height = int(aspect_ratio * new_width)

    # Resize the image
    img = img.resize((new_width, new_height))

    ascii_str = ""
    for y in range(new_height):
        for x in range(new_width):
            pixel_value = img.getpixel((x, y))
            # Map pixel value to the correct character
            ascii_str += pixel_to_ascii(pixel_value)
        ascii_str += "\n"  # Add a newline after each row

    return ascii_str

# Main function to run the script
def main(image_path):
    ascii_art = image_to_ascii(image_path)
    print(ascii_art)

# Call the main function with your image path
image_path = r"C:\Users\.jpg"  # Replace with the actual path to your image
main(image_path)
